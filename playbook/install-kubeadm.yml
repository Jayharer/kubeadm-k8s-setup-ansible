- name: Install kubeadm on ubuntu EC2 machine
  hosts: all
  become: yes
  remote_user: ubuntu
  become_user: root
  gather_facts: true

  tasks:
    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install basic packages
      ansible.builtin.apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gpg

    - name: Remove old Kubernetes apt keyring
      ansible.builtin.file:
        path: /etc/apt/keyrings/kubernetes-apt-keyring.gpg
        state: absent

    - name: Create K8s keyring
      ansible.builtin.shell: |
        curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.33/deb/Release.key | gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

    - name: overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
      ansible.builtin.shell: |
        echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.33/deb/ /' | tee /etc/apt/sources.list.d/kubernetes.list

    - name: Update apt cache
      ansible.builtin.apt:
        update_cache: yes

    - name: Install containerd
      apt:
        name: containerd
        state: present

    - name: Containerd basic configuration
      ansible.builtin.shell: |
        mkdir -p /etc/containerd
        containerd config default | sed 's/SystemdCgroup = false/SystemdCgroup = true/' | tee /etc/containerd/config.toml
        sed -i 's|registry.k8s.io/pause:3.8|registry.k8s.io/pause:3.10|g' /etc/containerd/config.toml
        chmod 777 /var/run/containerd/containerd.sock

    - name: start containerd service
      ansible.builtin.systemd_service:
        name: containerd
        state: started
        enabled: true

    - name: Enable IP forwarding
      ansible.builtin.shell: |
        cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
        net.bridge.bridge-nf-call-iptables = 1
        net.ipv4.ip_forward = 1
        EOF
        sysctl --system

    - name: Mobprob
      ansible.builtin.shell: |
        modprobe br_netfilter
        echo 'br_netfilter' | tee /etc/modules-load.d/br_netfilter.conf

    - name: Install kubelet kubeadm kubectl
      ansible.builtin.apt:
        pkg:
          - kubelet
          - kubeadm
          - kubectl

    - name: apt-mark hold
      ansible.builtin.shell: |
        sudo apt-mark hold kubelet kubeadm kubectl

    - name: start kubelet service
      ansible.builtin.systemd_service:
        name: kubelet
        state: started
        enabled: true
